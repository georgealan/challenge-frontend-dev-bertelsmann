:root {
    --clr-primary-400: #00a1ab;
    --clr-primary-500: #3741a0;

    --clr-accent-400: #00cdac;
    --clr-accent-500: #114243;

    --clr-neutral-100: #fff;
    --clr-neutral-200: #fafafa;
    --clr-neutral-300: #e5e3e8;
    --clr-neutral-400: #4e4e4e;
}

/* ////////////////
        RESET
   //////////////// */
*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

/* ////////////////////
      GENERAL STYLING
   //////////////////// */

body {
    font-family: "Roboto", sans-serif;
    text-align: center;
    margin: 0;
}

section {
    padding: 6rem 0;
}

.section-title {
    font-size: 2.5rem;
    text-transform: uppercase;
    font-weight: 900;
    margin: 0;
    color: var(--clr-primary-400);
}

.fs-500 {
    font-size: 1.3125rem;
    margin: 0 0 0.7em 0;
}

.container {
    padding: 0 2em;
    margin: 0 auto;
    max-width: 1000px;
}

/*
You can initiate a variable inside a class, and with that it will inherit in the
parent container, this approach is usefull for use in elements inside parents, how 
it was used here, in the children button.
We control the style of button in acordance to a color scheme that the container follow.
*/
.bg-light {
    --bg: var(--clr-neutral-400);
    --fg: var(--clr-neutral-100);
    --pop: var(--clr-primary-400);

    color: var(--clr-neutral-400);
    background: linear-gradient(-45deg, #e5e3e8, #fafafa);
}

.bg-accent {
    --bg: var(--clr-neutral-100);
    --fg: var(--clr-neutral-400);
    --pop: var(--clr-neutral-100);

    color: var(--clr-neutral-100);
    background: linear-gradient(-45deg, #00a1ab, #3741a0);
}

.bg-dark {
    color: var(--clr-neutral-100);
    background: var(--clr-neutral-400);
}


/* ////////////////////
          BUTTONS
   //////////////////// */

.button {
    display: inline-block;
    text-decoration: none;
    padding: 0.5em 0.75em;
    border-radius: 0.25em;
    text-transform: uppercase;
    font-weight: 700;
    background: var(--bg, var(--clr-primary-400));
    color: var(--fg, var(--clr-neutral-100));
}
/* 
In the class above we use the levarage of variables to change button color in 
accordingly to the state that parent container use. The sintax here mean
Try to use this variable --bg here, if it doesn't exist use the second one instead.
*/

.button--light {
    background: #fff;
    color: #4e4ee4;
}

.button--dark {
    background: #4e4ee4;
    color: #fff;
}

/* ////////////////////
          PLANS
   //////////////////// */

.recommended__ribbon::before {
    --f: 1.2em;
    --c:orange;
    --d:15px;

    color: #4E4E4E;
    font-weight: 700;
    content: attr(data-ribbon);
    font-size:var(--f);

    /* I : position & coloration */
    position: absolute;
    top: 0;
    right: 0;
    transform: translate(29.29%, -100%) rotate(45deg);
    transform-origin: bottom left;
    padding: 5px 35px calc(var(--d) + 5px);
    background: linear-gradient(rgba(0, 0, 0, 0.5) 0 0) bottom/100% var(--d) no-repeat var(--c);
    
    /* II : clipping */
    clip-path: polygon(0 0,100% 0,100% 100%,calc(100% - var(--d)) calc(100% - var(--d)),var(--d) calc(100% - var(--d)) , 0 100%);
    
    /* III : masking */
    -webkit-mask: 
        linear-gradient( 135deg, transparent calc(50% - var(--d)*0.707),#fff 0) bottom left,
        linear-gradient(-135deg, transparent calc(50% - var(--d)*0.707),#fff 0) bottom right;
    -webkit-mask-size: 300vmax 300vmax;
    -webkit-mask-composite: destination-in;
    mask-composite: intersect;
}

.left::before {
    left:0;
    right:auto;
    transform: translate(-29.29%, -100%) rotate(-45deg);
    transform-origin: bottom right;
}

.ribbon {
    position: relative;
}

.plans {
    display: flex;
    justify-content: center;
    margin: 3.5em 0;
}

.plan {
    width: 16.5rem;
    padding: 2em;
    border-radius: 0.7em;
    margin: 0 0.5em;
}

.plan:hover {
    z-index: 999;
    transform: scale(1.2);
    box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;
}

.plan__title {
    text-transform: uppercase;
    margin: 0 0 1em;
}

.plan__price {
    font-size: 3rem;
    line-height: 1;
    font-weight: 900;
    margin: 0;
    color: var(--pop);
}

.plan__price span {
    display: block;
    font-size: 1.5625rem;
    font-weight: 300;
}

.plan__description {
    margin: 2em 0;
    line-height: 1.5;
}

/* ////////////////////
          TEAMS
   //////////////////// */

.team {
    background: #e5e3e8;
}

.team-members {
    display: flex;
    flex-wrap: wrap;
}

.team-member {
    text-align: left;
    flex: 1 1 45%;
    margin: 1em;
    display: flex;
    border-radius: 0.5em;
    align-items: center;
    padding: 0.5em 2em 0.5em 0.5em;
    line-height: 1.6;
}

.team-member img {
    width: 10rem;
    border-radius: 0.25em;
    margin-right: 1em;
}

.team-member .name {
    font-size: 1.75rem;
    line-height: 1;
    font-weight: 900;
    color: var(--pop);
    margin: 0;
}

.team-member .position {
    margin-top: 0;
    font-weight: 700;
    opacity: 0.8;
}

.team-member--mirrored {
    padding: 0.5em 0.5em 0.5em 2em;
}

.team-member--mirrored img {
    order: 2; /* Flex order to control order appearance position itens in the box */
    margin-right: 0;
    margin-left: 1em;
}
