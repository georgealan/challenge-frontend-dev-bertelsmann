:root {
    --clr-primary-400: #00a1ab;
    --clr-primary-500: #3741a0;

    --clr-accent-400: #00cdac;
    --clr-accent-500: #114243;

    --clr-neutral-100: #fff;
    --clr-neutral-200: #fafafa;
    --clr-neutral-300: #e5e3e8;
    --clr-neutral-400: #4e4e4e;
}

/* ////////////////
        RESET
   //////////////// */
*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

/* ////////////////////
      GENERAL STYLING
   //////////////////// */

body {
    font-family: "Roboto", sans-serif;
    text-align: center;
    margin: 0;
}

section {
    padding: 6rem 0;
}

.section-title {
    font-size: 2.5rem;
    text-transform: uppercase;
    font-weight: 900;
    margin: 0;
    color: var(--clr-primary-400);
}

.fs-500 {
    font-size: 1.3125rem;
    margin: 0;
}

.container {
    padding: 0 2em;
    margin: 0 auto;
    max-width: 1000px;
}

/*
You can initiate a variable inside a class, and with that it will inherit in the
parent container, this approach is usefull for use in elements inside parents, how 
it was used here, in the children button.
We control the style of button in acordance to a color scheme that the container follow.
*/
.bg-light {
    --bg: var(--clr-neutral-400);
    --fg: var(--clr-neutral-100);
    --pop: var(--clr-primary-400);

    color: var(--clr-neutral-400);
    background: linear-gradient(-45deg, #e5e3e8, #fafafa);
}

.bg-accent {
    --bg: var(--clr-neutral-100);
    --fg: var(--clr-neutral-400);
    --pop: var(--clr-neutral-100);

    color: var(--clr-neutral-100);
    background: linear-gradient(-45deg, #00a1ab, #3741a0);
}

.bg-dark {
    color: var(--clr-neutral-100);
    background: var(--clr-neutral-400);
}


/* ////////////////////
          BUTTONS
   //////////////////// */

.button {
    display: inline-block;
    text-decoration: none;
    padding: 0.5em 0.75em;
    border-radius: 0.25em;
    text-transform: uppercase;
    font-weight: 700;
    background: var(--bg, var(--clr-primary-400));
    color: var(--fg, var(--clr-neutral-100));
}
/* 
In the class above we use the levarage of variables to change button color in 
accordingly to the state that parent container use. The sintax here mean
Try to use this variable --bg here, if it doesn't exist use the second one instead.
*/

.button--light {
    background: #fff;
    color: #4e4ee4;
}

.button--dark {
    background: #4e4ee4;
    color: #fff;
}


